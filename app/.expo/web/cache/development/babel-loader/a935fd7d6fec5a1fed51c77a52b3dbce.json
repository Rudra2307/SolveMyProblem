{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport Colors from \"../constants/colors\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport * as Font from \"expo-font\";\nimport { AppLoading } from \"expo\";\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar ModalButton = function ModalButton(_ref) {\n  var handlePress = _ref.handlePress,\n      title = _ref.title;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      dataLoaded = _useState2[0],\n      setDataLoaded = _useState2[1];\n\n  var init = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        console.log(\"wait\");\n      } catch (e) {\n        console.warn(e);\n      } finally {\n        setDataLoaded(true);\n      }\n    });\n\n    return function init() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    init();\n  }, []);\n\n  if (!dataLoaded) {\n    return _jsx(View, {\n      children: _jsx(Text, {\n        children: \"Loading....\"\n      })\n    });\n  } else {\n    return _jsx(TouchableOpacity, {\n      style: {\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        backgroundColor: Colors.primaryColor,\n        padding: hp(\"1.8%\"),\n        borderRadius: 15,\n        marginTop: hp(\"2%\")\n      },\n      onPress: function onPress() {\n        return handlePress;\n      },\n      children: _jsx(Text, {\n        style: {\n          color: \"white\",\n          fontFamily: \"Quicksand-Bold\",\n          fontSize: 16\n        },\n        children: title\n      })\n    });\n  }\n};\n\nexport default ModalButton;\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["D:/Deshna/Swachh-master/Swachh-master/app/components/modalButton.js"],"names":["React","useState","useEffect","Colors","Font","AppLoading","widthPercentageToDP","wp","heightPercentageToDP","hp","ModalButton","handlePress","title","dataLoaded","setDataLoaded","init","console","log","e","warn","justifyContent","alignItems","backgroundColor","primaryColor","padding","borderRadius","marginTop","color","fontFamily","fontSize","styles","StyleSheet","create"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP;;;;;;;;;AAEA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,SAASC,UAAT,QAA2B,MAA3B;AAGA,SAASC,mBAAmB,IAAIC,EAAhC,EAAoCC,oBAAoB,IAAIC,EAA5D,QAAsE,gCAAtE;;;AAWA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAA4B;AAAA,MAAzBC,WAAyB,QAAzBA,WAAyB;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAC5C,kBAAoCX,QAAQ,CAAC,KAAD,CAA5C;AAAA;AAAA,MAAOY,UAAP;AAAA,MAAmBC,aAAnB;;AACA,MAAMC,IAAI;AAAA,kCAAG,aAAY;AACrB,UAAI;AAEAC,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AAEH,OAJD,CAIE,OAAOC,CAAP,EAAU;AACRF,QAAAA,OAAO,CAACG,IAAR,CAAaD,CAAb;AACH,OAND,SAMU;AACNJ,QAAAA,aAAa,CAAC,IAAD,CAAb;AAGH;AACJ,KAZS;;AAAA,oBAAJC,IAAI;AAAA;AAAA;AAAA,KAAV;;AAcAb,EAAAA,SAAS,CAAC,YAAM;AACZa,IAAAA,IAAI;AACP,GAFQ,EAEN,EAFM,CAAT;;AAKA,MAAI,CAACF,UAAL,EAAiB;AACb,WACI,KAAC,IAAD;AAAA,gBAEI,KAAC,IAAD;AAAA;AAAA;AAFJ,MADJ;AAMH,GAPD,MAOO;AACH,WAEI,KAAC,gBAAD;AAAkB,MAAA,KAAK,EAAE;AAAEO,QAAAA,cAAc,EAAE,QAAlB;AAA4BC,QAAAA,UAAU,EAAE,QAAxC;AAAkDC,QAAAA,eAAe,EAAEnB,MAAM,CAACoB,YAA1E;AAAuFC,QAAAA,OAAO,EAACf,EAAE,CAAC,MAAD,CAAjG;AAA0GgB,QAAAA,YAAY,EAAC,EAAvH;AAA0HC,QAAAA,SAAS,EAACjB,EAAE,CAAC,IAAD;AAAtI,OAAzB;AAAyK,MAAA,OAAO,EAAE;AAAA,eAAIE,WAAJ;AAAA,OAAlL;AAAA,gBAEI,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACgB,UAAAA,KAAK,EAAC,OAAP;AAAeC,UAAAA,UAAU,EAAC,gBAA1B;AAA2CC,UAAAA,QAAQ,EAAC;AAApD,SAAb;AAAA,kBAAuEjB;AAAvE;AAFJ,MAFJ;AASH;AACJ,CAvCD;;AAyCA,eAAeF,WAAf;AACA,IAAMoB,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Colors from '../constants/colors';\nimport { StyleSheet, SafeAreaView, Text, View, Image, TextInput, StatusBar, TouchableOpacity } from 'react-native';\nimport * as Font from \"expo-font\";\nimport { AppLoading } from \"expo\";\n\n\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\n// const fetchFonts = () => {\n//     console.log(\"loading font\");\n//     return Font.loadAsync({\n//         \"Quicksand-regular\": require(\"../assets/fonts/Quicksand-Regular.ttf\"),\n//         \"Quicksand-medium\": require(\"../assets/fonts/Quicksand-Medium.ttf\"),\n//         \"Quicksand-Bold\": require(\"../assets/fonts/Quicksand-Bold.ttf\"),\n//         \"Quicksand-SemiBold\": require(\"../assets/fonts/Quicksand-SemiBold.ttf\"),\n//     });\n// };\nconst ModalButton = ({ handlePress, title }) => {\n    const [dataLoaded, setDataLoaded] = useState(false);\n    const init = async () => {\n        try {\n            // Keep on showing the SlashScreen\n            console.log(\"wait\");\n            // await fetchFonts();\n        } catch (e) {\n            console.warn(e);\n        } finally {\n            setDataLoaded(true);\n            // Hiding the SplashScreen\n\n        }\n    }\n\n    useEffect(() => {\n        init();\n    }, []);\n\n\n    if (!dataLoaded) {\n        return (\n            <View>\n\n                <Text>Loading....</Text>\n            </View>\n        );\n    } else {\n        return (\n\n            <TouchableOpacity style={{ justifyContent: \"center\", alignItems: \"center\", backgroundColor: Colors.primaryColor,padding:hp(\"1.8%\"),borderRadius:15,marginTop:hp(\"2%\") }} onPress={()=>handlePress}>\n\n                <Text style={{color:\"white\",fontFamily:\"Quicksand-Bold\",fontSize:16}}>{title}</Text>\n\n            </TouchableOpacity>\n\n        );\n    }\n}\n\nexport default ModalButton;\nconst styles = StyleSheet.create({\n\n});"]},"metadata":{},"sourceType":"module"}