{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { Camera } from 'expo-camera';\nimport styles from \"../constants/styles\";\nimport Toolbar from \"../components/toolbar\";\nimport { Col, Row, Grid } from \"react-native-easy-grid\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function CameraPage(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasPermission = _useState2[0],\n      setHasPermission = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      cameraRef = _useState4[0],\n      setCameraRef = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      Image = _useState6[0],\n      setImage = _useState6[1];\n\n  var _useState7 = useState(Camera.Constants.Type.back),\n      _useState8 = _slicedToArray(_useState7, 2),\n      type = _useState8[0],\n      setType = _useState8[1];\n\n  useEffect(function () {\n    _asyncToGenerator(function* () {\n      var _yield$Camera$request = yield Camera.requestPermissionsAsync(),\n          status = _yield$Camera$request.status;\n\n      setHasPermission(status === 'granted');\n    })();\n  }, []);\n\n  if (hasPermission === null) {\n    return _jsx(View, {});\n  }\n\n  if (hasPermission === false) {\n    return _jsx(Text, {\n      children: \"No access to camera\"\n    });\n  }\n\n  return _jsx(View, {\n    style: {\n      flex: 1\n    },\n    children: _jsx(Camera, {\n      style: {\n        flex: 1\n      },\n      type: type,\n      ref: function ref(_ref3) {\n        setCameraRef(_ref3);\n      },\n      children: _jsx(View, {\n        style: {\n          flex: 1,\n          backgroundColor: 'transparent',\n          flexDirection: 'row'\n        },\n        children: _jsx(Toolbar, {\n          cameraRef: cameraRef,\n          navigation: navigation\n        })\n      })\n    })\n  });\n}","map":{"version":3,"sources":["D:/Deshna/Swachh-master/Swachh-master/app/components/camerapage.js"],"names":["React","useState","useEffect","Camera","styles","Toolbar","Col","Row","Grid","CameraPage","navigation","hasPermission","setHasPermission","cameraRef","setCameraRef","Image","setImage","Constants","Type","back","type","setType","requestPermissionsAsync","status","flex","ref","backgroundColor","flexDirection"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;AAEA,SAASC,MAAT,QAAuB,aAAvB;AACA,OAAOC,MAAP;AACA,OAAOC,OAAP;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,QAA+B,wBAA/B;;AAIA,eAAe,SAASC,UAAT,OAAkC;AAAA,MAAbC,UAAa,QAAbA,UAAa;;AAC7C,kBAA0CT,QAAQ,CAAC,IAAD,CAAlD;AAAA;AAAA,MAAOU,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,mBAAkCX,QAAQ,CAAC,IAAD,CAA1C;AAAA;AAAA,MAAOY,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAA0Bb,QAAQ,CAAC,IAAD,CAAlC;AAAA;AAAA,MAAOc,KAAP;AAAA,MAAcC,QAAd;;AAEA,mBAAwBf,QAAQ,CAACE,MAAM,CAACc,SAAP,CAAiBC,IAAjB,CAAsBC,IAAvB,CAAhC;AAAA;AAAA,MAAOC,IAAP;AAAA,MAAaC,OAAb;;AAA8DnB,EAAAA,SAAS,CAAC,YAAM;AAC1E,sBAAC,aAAY;AACT,wCAAyBC,MAAM,CAACmB,uBAAP,EAAzB;AAAA,UAAQC,MAAR,yBAAQA,MAAR;;AACAX,MAAAA,gBAAgB,CAACW,MAAM,KAAK,SAAZ,CAAhB;AACH,KAHD;AAIH,GALsE,EAKpE,EALoE,CAAT;;AAKtD,MAAIZ,aAAa,KAAK,IAAtB,EAA4B;AAChC,WAAO,KAAC,IAAD,KAAP;AACH;;AACD,MAAIA,aAAa,KAAK,KAAtB,EAA6B;AACzB,WAAO,KAAC,IAAD;AAAA;AAAA,MAAP;AACH;;AACD,SACI,KAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEa,MAAAA,IAAI,EAAE;AAAR,KAAb;AAAA,cACI,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAAf;AAA4B,MAAA,IAAI,EAAEJ,IAAlC;AAAwC,MAAA,GAAG,EAAE,aAAAK,KAAG,EAAI;AAChDX,QAAAA,YAAY,CAACW,KAAD,CAAZ;AACH,OAFD;AAAA,gBAGI,KAAC,IAAD;AACI,QAAA,KAAK,EAAE;AACHD,UAAAA,IAAI,EAAE,CADH;AAEHE,UAAAA,eAAe,EAAE,aAFd;AAGHC,UAAAA,aAAa,EAAE;AAHZ,SADX;AAAA,kBAMI,KAAC,OAAD;AAAS,UAAA,SAAS,EAAEd,SAApB;AAA+B,UAAA,UAAU,EAAEH;AAA3C;AANJ;AAHJ;AADJ,IADJ;AAgBH","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Text, View, TouchableOpacity, TouchableWithoutFeedback } from 'react-native';\nimport { Camera } from 'expo-camera';\nimport styles from '../constants/styles';\nimport Toolbar from '../components/toolbar';\nimport { Col, Row, Grid } from \"react-native-easy-grid\";\n\n\n\nexport default function CameraPage({navigation}) {\n    const [hasPermission, setHasPermission] = useState(null);\n    const [cameraRef, setCameraRef] = useState(null)\n    const [Image, setImage] = useState(null)\n    \n    const [type, setType] = useState(Camera.Constants.Type.back); useEffect(() => {\n        (async () => {\n            const { status } = await Camera.requestPermissionsAsync();\n            setHasPermission(status === 'granted');\n        })();\n    }, []); if (hasPermission === null) {\n        return <View />;\n    }\n    if (hasPermission === false) {\n        return <Text>No access to camera</Text>;\n    }\n    return (\n        <View style={{ flex: 1 }}>\n            <Camera style={{ flex: 1 }} type={type} ref={ref => {\n                setCameraRef(ref);\n            }}>\n                <View\n                    style={{\n                        flex: 1,\n                        backgroundColor: 'transparent',\n                        flexDirection: 'row',\n                    }}>\n                    <Toolbar cameraRef={cameraRef} navigation={navigation}/>\n                </View>\n            </Camera>\n        </View>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}