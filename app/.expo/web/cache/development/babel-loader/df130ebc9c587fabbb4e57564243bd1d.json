{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport { Camera } from 'expo-camera';\nimport { Ionicons } from '@expo/vector-icons';\nimport { Col, Row, Grid } from \"react-native-easy-grid\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Feather } from '@expo/vector-icons';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport styles from \"../constants/styles\";\nimport * as Location from 'expo-location';\nimport axios from \"axios\";\nimport Constants from \"../constants/text\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Toolbar(_ref) {\n  var cameraRef = _ref.cameraRef,\n      navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      location = _useState2[0],\n      setLocation = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      errorMsg = _useState4[0],\n      setErrorMsg = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userData = _useState6[0],\n      setuserData = _useState6[1];\n\n  useEffect(function () {\n    _asyncToGenerator(function* () {\n      var _yield$Location$reque = yield Location.requestPermissionsAsync(),\n          status = _yield$Location$reque.status;\n\n      if (status !== 'granted') {\n        setErrorMsg('Permission to access location was denied');\n      }\n\n      var location = yield Location.getCurrentPositionAsync({});\n      setLocation(location);\n    })();\n  });\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      capturing = _useState8[0],\n      setCapturing = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      image = _useState10[0],\n      setImage = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      IsImage = _useState12[0],\n      setIsImage = _useState12[1];\n\n  function takePicture() {\n    return _takePicture.apply(this, arguments);\n  }\n\n  function _takePicture() {\n    _takePicture = _asyncToGenerator(function* () {\n      if (cameraRef) {\n        setCapturing(true);\n        var options = {\n          quality: 0.1,\n          base64: true,\n          uri: true\n        };\n        var photo = yield cameraRef.takePictureAsync(options);\n        setCapturing(false);\n        setIsImage(true);\n        setImage(photo.base64);\n        yield cameraRef.pausePreview();\n      }\n    });\n    return _takePicture.apply(this, arguments);\n  }\n\n  function uploadData() {\n    return _uploadData.apply(this, arguments);\n  }\n\n  function _uploadData() {\n    _uploadData = _asyncToGenerator(function* () {\n      setIsImage(false);\n      var response = yield AsyncStorage.getItem(\"userData\");\n      response = JSON.parse(response);\n      console.log('\\n\\n\\n\\noriginal data:' + JSON.stringify(response.data.user_email));\n      var location = yield Location.getCurrentPositionAsync({});\n      var data = {\n        \"image_link\": image,\n        \"grievance_id\": Math.random().toString(36).substring(7),\n        \"user_id\": response.data.user_email,\n        \"grievance_type\": \"unpredicted\",\n        \"latitude\": location.coords.latitude,\n        \"longitude\": location.coords.longitude\n      };\n      console.log('this is your data: ' + JSON.stringify(data));\n      axios.post(Constants.ApiLink + \"/uploader\", data).then(function () {\n        var _ref3 = _asyncToGenerator(function* (response) {\n          try {\n            var jsonValue = JSON.stringify(response.data);\n            yield AsyncStorage.setItem(\"value\", jsonValue);\n            console.log(\"data: \" + jsonValue);\n          } catch (e) {\n            console.log(\"Got error while storing data to async\" + e);\n          }\n        });\n\n        return function (_x) {\n          return _ref3.apply(this, arguments);\n        };\n      }()).catch(function (error) {\n        console.log(\"ERROR ON HOME\", error);\n      }).finally(function () {});\n      yield cameraRef.resumePreview();\n    });\n    return _uploadData.apply(this, arguments);\n  }\n\n  function account() {\n    return _account.apply(this, arguments);\n  }\n\n  function _account() {\n    _account = _asyncToGenerator(function* () {\n      navigation.navigate('Profile');\n    });\n    return _account.apply(this, arguments);\n  }\n\n  return _jsx(Grid, {\n    style: styles.bottomToolbar,\n    children: _jsxs(Row, {\n      children: [_jsx(Col, {\n        style: styles.alignCenter,\n        children: _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate('EntryRecords');\n          },\n          children: _jsx(MaterialIcons, {\n            name: \"history\",\n            size: 30,\n            color: \"white\"\n          })\n        })\n      }), _jsx(Col, {\n        size: 2,\n        style: styles.alignCenter,\n        children: _jsx(TouchableWithoutFeedback, {\n          onPress: takePicture,\n          children: _jsx(View, {\n            style: [styles.captureBtn, capturing && styles.captureBtnActive],\n            children: capturing && _jsx(View, {\n              style: styles.captureBtnInternal\n            })\n          })\n        })\n      }), IsImage ? _jsx(Col, {\n        style: styles.alignCenter,\n        children: _jsx(TouchableOpacity, {\n          onPress: uploadData,\n          children: _jsx(Feather, {\n            name: \"check\",\n            size: 30,\n            color: \"white\"\n          })\n        })\n      }) : _jsx(Col, {\n        style: styles.alignCenter,\n        children: _jsx(TouchableOpacity, {\n          onPress: account,\n          children: _jsx(MaterialCommunityIcons, {\n            name: \"account\",\n            size: 30,\n            color: \"white\"\n          })\n        })\n      })]\n    })\n  });\n}","map":{"version":3,"sources":["D:/Deshna/Swachh-master/Swachh-master/app/components/toolbar.js"],"names":["React","useState","useEffect","Camera","Ionicons","Col","Row","Grid","Feather","MaterialCommunityIcons","MaterialIcons","styles","Location","axios","Constants","AsyncStorage","Toolbar","cameraRef","navigation","location","setLocation","errorMsg","setErrorMsg","userData","setuserData","requestPermissionsAsync","status","getCurrentPositionAsync","capturing","setCapturing","image","setImage","IsImage","setIsImage","takePicture","options","quality","base64","uri","photo","takePictureAsync","pausePreview","uploadData","response","getItem","JSON","parse","console","log","stringify","data","user_email","Math","random","toString","substring","coords","latitude","longitude","post","ApiLink","then","jsonValue","setItem","e","catch","error","finally","resumePreview","account","navigate","bottomToolbar","alignCenter","captureBtn","captureBtnActive","captureBtnInternal"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Camera } from 'expo-camera';\nimport { Ionicons } from '@expo/vector-icons';\nimport { Col, Row, Grid } from \"react-native-easy-grid\";\nimport { View, TouchableWithoutFeedback, TouchableOpacity } from 'react-native';\nimport { Feather } from '@expo/vector-icons';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport styles from '../constants/styles';\nimport * as Location from 'expo-location';\nimport axios from \"axios\";\nimport Constants from '../constants/text';\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nexport default function Toolbar({ cameraRef, navigation }) {\n    const [location, setLocation] = useState(null);\n    const [errorMsg, setErrorMsg] = useState(null);\n    const [userData, setuserData] = useState({});\n\n    useEffect(() => {\n        (async () => {\n            let { status } = await Location.requestPermissionsAsync();\n            if (status !== 'granted') {\n                setErrorMsg('Permission to access location was denied');\n            }\n\n            let location = await Location.getCurrentPositionAsync({});\n            setLocation(location);\n        })();\n    });\n\n\n\n    const [capturing, setCapturing] = useState(false)\n    const [image, setImage] = useState(null)\n    const [IsImage, setIsImage] = useState(false)\n\n    async function takePicture() {\n\n        if (cameraRef) {\n            setCapturing(true)\n            const options = { quality: 0.1, base64: true, uri: true };\n            let photo = await cameraRef.takePictureAsync(options);\n            setCapturing(false)\n            setIsImage(true)\n            setImage(photo.base64)\n            await cameraRef.pausePreview()\n        }\n\n    }\n\n    async function uploadData() {\n        setIsImage(false)\n        let response=await AsyncStorage.getItem(\"userData\")\n        \n        response = JSON.parse(response);\n        console.log('\\n\\n\\n\\noriginal data:'+JSON.stringify(response.data.user_email))\n        let location = await Location.getCurrentPositionAsync({});\n       \n        const data = {\n            \"image_link\": image,\n            \"grievance_id\": Math.random().toString(36).substring(7),\n            \"user_id\": response.data.user_email,\n            \"grievance_type\": \"unpredicted\",\n            \"latitude\": location.coords.latitude,\n            \"longitude\": location.coords.longitude,\n        }\n\n        console.log('this is your data: ' + JSON.stringify(data))\n        axios\n            .post(`${Constants.ApiLink}/uploader`, data)\n            .then(async function (response) {\n                // handle success\n\n                try {\n                    const jsonValue = JSON.stringify(response.data);\n                    await AsyncStorage.setItem(\"value\", jsonValue);\n                    console.log(\"data: \" + jsonValue);\n                } catch (e) {\n                    // saving error\n                    console.log(\"Got error while storing data to async\" + e);\n                }\n            })\n            .catch(function (error) {\n                // handle error\n                console.log(\"ERROR ON HOME\", error);\n            })\n            .finally(function () {\n                // always executed\n            });\n        // console.log('This is my base 64 image', image)\n        await cameraRef.resumePreview()\n    }\n\n    async function account() {\n        navigation.navigate('Profile')\n    }\n\n    return (\n        <Grid style={styles.bottomToolbar}>\n            <Row>\n                <Col style={styles.alignCenter}>\n                    <TouchableOpacity onPress={() => navigation.navigate('EntryRecords')}>\n                        <MaterialIcons name=\"history\" size={30} color=\"white\" />\n                    </TouchableOpacity>\n                </Col>\n\n                <Col size={2} style={styles.alignCenter}>\n                    <TouchableWithoutFeedback\n                        onPress={takePicture}>\n                        <View style={[styles.captureBtn, capturing && styles.captureBtnActive]}>\n                            {capturing && <View style={styles.captureBtnInternal} />}\n                        </View>\n                    </TouchableWithoutFeedback>\n\n\n                </Col>\n                {\n                    IsImage ?\n                        <Col style={styles.alignCenter}>\n                            <TouchableOpacity onPress={uploadData}>\n                                <Feather name=\"check\" size={30} color=\"white\" />\n                            </TouchableOpacity>\n                        </Col> : <Col style={styles.alignCenter}>\n                            <TouchableOpacity onPress={account}>\n                                <MaterialCommunityIcons name=\"account\" size={30} color=\"white\" />\n                            </TouchableOpacity>\n                        </Col>\n                }\n            </Row>\n        </Grid>);\n}"]},"metadata":{},"sourceType":"module"}