{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport Colors from \"../constants/colors\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { SimpleLineIcons } from '@expo/vector-icons';\nimport { Entypo } from '@expo/vector-icons';\nimport { Feather } from '@expo/vector-icons';\nimport { Ionicons } from '@expo/vector-icons';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar EntryCard = function EntryCard(_ref) {\n  var props = _ref.props;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      dataLoaded = _useState2[0],\n      setDataLoaded = _useState2[1];\n\n  var init = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        console.log(\"wait\");\n      } catch (e) {\n        console.warn(e);\n      } finally {\n        setDataLoaded(true);\n      }\n    });\n\n    return function init() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    init();\n  }, []);\n\n  if (!dataLoaded) {\n    return _jsx(View, {\n      children: _jsx(Text, {\n        children: \"Loading....\"\n      })\n    });\n  } else {\n    return _jsx(TouchableOpacity, {\n      children: _jsx(View, {\n        style: styles.cardContainer,\n        children: _jsxs(View, {\n          style: styles.textContainer,\n          children: [_jsx(View, {\n            style: styles.row,\n            children: _jsx(Image, {\n              source: {\n                uri: props.image_link\n              },\n              style: {\n                width: wp(\"78%\"),\n                height: wp(\"39%\"),\n                borderRadius: 10\n              }\n            })\n          }), _jsxs(View, {\n            style: styles.row,\n            children: [_jsx(Ionicons, {\n              name: \"md-list-box\",\n              size: 12,\n              color: \"black\"\n            }), _jsxs(Text, {\n              style: styles.flatNo,\n              children: [\"  \", props.grievance_type, \"  \"]\n            })]\n          }), _jsxs(View, {\n            style: styles.row,\n            children: [_jsx(Entypo, {\n              name: \"location\",\n              size: 12,\n              color: \"black\"\n            }), _jsxs(Text, {\n              style: styles.flatNo,\n              children: [\" \", props.area, \"  \"]\n            })]\n          }), _jsxs(View, {\n            style: styles.row,\n            children: [_jsx(SimpleLineIcons, {\n              name: \"clock\",\n              size: 11,\n              color: \"black\"\n            }), _jsxs(Text, {\n              style: styles.flatNo,\n              children: [\" \", props.assigned_date, \" \"]\n            })]\n          })]\n        })\n      })\n    });\n  }\n};\n\nexport default EntryCard;\nvar styles = StyleSheet.create({\n  cardContainer: {\n    margin: wp(\"3%\"),\n    backgroundColor: \"white\",\n    elevation: 5,\n    padding: wp(\"4%\"),\n    borderRadius: wp(\"3%\"),\n    justifyContent: \"space-between\",\n    borderLeftWidth: 4,\n    borderColor: Colors.primaryColor\n  },\n  textContainer: {},\n  userName: {\n    fontFamily: \"Quicksand-Bold\",\n    fontSize: 20,\n    paddingBottom: wp(\"0.8%\")\n  },\n  flatNo: {\n    fontFamily: \"Quicksand-SemiBold\"\n  },\n  row: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    paddingBottom: wp(\"1%\")\n  }\n});","map":{"version":3,"sources":["D:/Deshna/Swachh-master/Swachh-master/app/components/entryRecordCard.js"],"names":["React","useState","useEffect","Colors","SimpleLineIcons","Entypo","Feather","Ionicons","widthPercentageToDP","wp","heightPercentageToDP","hp","EntryCard","props","dataLoaded","setDataLoaded","init","console","log","e","warn","styles","cardContainer","textContainer","row","uri","image_link","width","height","borderRadius","flatNo","grievance_type","area","assigned_date","StyleSheet","create","margin","backgroundColor","elevation","padding","justifyContent","borderLeftWidth","borderColor","primaryColor","userName","fontFamily","fontSize","paddingBottom","flexDirection","alignItems"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Colors from '../constants/colors';\nimport { StyleSheet, SafeAreaView, Text, View, Image, TextInput, StatusBar, TouchableOpacity } from 'react-native';\nimport { SimpleLineIcons } from '@expo/vector-icons';\nimport { Entypo } from '@expo/vector-icons';\nimport { Feather } from '@expo/vector-icons';\nimport { Ionicons } from '@expo/vector-icons';\n\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\n\nconst EntryCard = ({ props }) => {\n    const [dataLoaded, setDataLoaded] = useState(false);\n    const init = async () => {\n        try {\n            // Keep on showing the SlashScreen\n            console.log(\"wait\");\n            // await fetchFonts();\n        } catch (e) {\n            console.warn(e);\n        } finally {\n            setDataLoaded(true);\n            // Hiding the SplashScreen\n\n        }\n    }\n\n    useEffect(() => {\n        init();\n    }, []);\n\n\n    if (!dataLoaded) {\n        return (\n            <View>\n\n                <Text>Loading....</Text>\n            </View>\n        );\n    } else {\n        return (\n\n            <TouchableOpacity>\n                <View style={styles.cardContainer}>\n                    <View style={styles.textContainer}>\n                        <View style={styles.row}>\n                            <Image source={{ uri: props.image_link }}\n                                style={{ width: wp(\"78%\"), height: wp(\"39%\"), borderRadius: 10 }} />\n                            {/* <Text style={styles.userName}> Abdul Ansari</Text> */}\n                        </View>\n                        <View style={styles.row}>\n                            <Ionicons name=\"md-list-box\" size={12} color=\"black\" />\n                            <Text style={styles.flatNo}>  {props.grievance_type}  </Text>\n\n                        </View>\n                        <View style={styles.row}>\n                            <Entypo name=\"location\" size={12} color=\"black\" />\n                            <Text style={styles.flatNo}> {props.area}  </Text>\n                        </View>\n                        <View style={styles.row}>\n                            <SimpleLineIcons name=\"clock\" size={11} color=\"black\" />\n                            <Text style={styles.flatNo}> {props.assigned_date} </Text>\n                        </View>\n\n                    </View>\n                </View>\n\n            </TouchableOpacity>\n\n        );\n    }\n}\n\nexport default EntryCard;\nconst styles = StyleSheet.create({\n    cardContainer: { margin: wp(\"3%\"), backgroundColor: \"white\", elevation: 5, padding: wp(\"4%\"), borderRadius: wp(\"3%\"), justifyContent: \"space-between\", borderLeftWidth: 4, borderColor: Colors.primaryColor },\n    textContainer: {},\n    userName: { fontFamily: \"Quicksand-Bold\", fontSize: 20, paddingBottom: wp(\"0.8%\") },\n    flatNo: { fontFamily: \"Quicksand-SemiBold\" },\n    row: { flexDirection: \"row\", alignItems: \"center\", paddingBottom: wp(\"1%\") }\n});"]},"metadata":{},"sourceType":"module"}