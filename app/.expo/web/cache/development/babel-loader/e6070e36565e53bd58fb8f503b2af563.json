{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _toArray from \"@babel/runtime/helpers/toArray\";\nimport { Platform } from 'expo-modules-core';\nimport * as rtlDetect from 'rtl-detect';\n\nvar getNavigatorLocales = function getNavigatorLocales() {\n  return Platform.isDOMAvailable ? navigator.languages || [navigator.language] : [];\n};\n\nexport default {\n  get currency() {\n    return null;\n  },\n\n  get decimalSeparator() {\n    return 1.1.toLocaleString().substring(1, 2);\n  },\n\n  get digitGroupingSeparator() {\n    var value = 1000 .toLocaleString();\n    return value.length === 5 ? value.substring(1, 2) : '';\n  },\n\n  get isRTL() {\n    var _rtlDetect$isRtlLang;\n\n    return (_rtlDetect$isRtlLang = rtlDetect.isRtlLang(this.locale)) != null ? _rtlDetect$isRtlLang : false;\n  },\n\n  get isMetric() {\n    var region = this.region;\n\n    switch (region) {\n      case 'US':\n      case 'LR':\n      case 'MM':\n        return false;\n    }\n\n    return true;\n  },\n\n  get locale() {\n    if (!Platform.isDOMAvailable) {\n      return '';\n    }\n\n    var locale = navigator.language || navigator['systemLanguage'] || navigator['browserLanguage'] || navigator['userLanguage'] || this.locales[0];\n    return locale;\n  },\n\n  get locales() {\n    if (!Platform.isDOMAvailable) {\n      return [];\n    }\n\n    var _navigator = navigator,\n        _navigator$languages = _navigator.languages,\n        languages = _navigator$languages === void 0 ? [] : _navigator$languages;\n    return Array.from(languages);\n  },\n\n  get timezone() {\n    var defaultTimeZone = 'Etc/UTC';\n\n    if (typeof Intl === 'undefined') {\n      return defaultTimeZone;\n    }\n\n    return Intl.DateTimeFormat().resolvedOptions().timeZone || defaultTimeZone;\n  },\n\n  get isoCurrencyCodes() {\n    return [];\n  },\n\n  get region() {\n    var locale = this.locale;\n\n    var _ref = typeof locale === 'string' ? locale.split('-') : [],\n        _ref2 = _toArray(_ref),\n        suffixes = _ref2.slice(1);\n\n    for (var suffix of suffixes) {\n      if (suffix.length === 2) {\n        return suffix.toUpperCase();\n      }\n    }\n\n    return null;\n  },\n\n  getLocales: function getLocales() {\n    var locales = getNavigatorLocales();\n    return locales == null ? void 0 : locales.map(function (languageTag) {\n      var locale = typeof Intl !== 'undefined' ? new Intl.Locale(languageTag) : {\n        region: null,\n        textInfo: null,\n        language: null\n      };\n      var region = locale.region,\n          textInfo = locale.textInfo,\n          language = locale.language;\n      var digitGroupingSeparator = Array.from(10000 .toLocaleString(languageTag)).filter(function (c) {\n        return c > '9' || c < '0';\n      })[0] || null;\n      var decimalSeparator = 1.1.toLocaleString(languageTag).substring(1, 2);\n      return {\n        languageTag: languageTag,\n        languageCode: language || languageTag.split('-')[0] || 'en',\n        textDirection: (textInfo == null ? void 0 : textInfo.direction) || null,\n        digitGroupingSeparator: digitGroupingSeparator,\n        decimalSeparator: decimalSeparator,\n        measurementSystem: null,\n        currencyCode: null,\n        currencySymbol: null,\n        regionCode: region || null\n      };\n    });\n  },\n  getCalendars: function getCalendars() {\n    var _locale$calendars, _locale$timeZones, _startsWith, _ref3, _locale$hourCycles, _locale$weekInfo;\n\n    var locales = _toConsumableArray(getNavigatorLocales()).sort(function (a, b) {\n      return a.includes('-') === b.includes('-') ? 0 : a.includes('-') ? -1 : 1;\n    });\n\n    var locale = locales[0] && typeof Intl !== 'undefined' ? new Intl.Locale(locales[0]) : null;\n    return [{\n      calendar: (locale == null ? void 0 : locale.calendar) || (locale == null ? void 0 : (_locale$calendars = locale.calendars) == null ? void 0 : _locale$calendars[0]) || null,\n      timeZone: (locale == null ? void 0 : locale.timeZone) || (locale == null ? void 0 : (_locale$timeZones = locale.timeZones) == null ? void 0 : _locale$timeZones[0]) || null,\n      uses24hourClock: (_startsWith = (_ref3 = (locale == null ? void 0 : locale.hourCycle) || (locale == null ? void 0 : (_locale$hourCycles = locale.hourCycles) == null ? void 0 : _locale$hourCycles[0])) == null ? void 0 : _ref3.startsWith('h2')) != null ? _startsWith : null,\n      firstWeekday: (locale == null ? void 0 : (_locale$weekInfo = locale.weekInfo) == null ? void 0 : _locale$weekInfo.firstDay) || null\n    }];\n  },\n  getLocalizationAsync: function () {\n    var _getLocalizationAsync = _asyncToGenerator(function* () {\n      var currency = this.currency,\n          decimalSeparator = this.decimalSeparator,\n          digitGroupingSeparator = this.digitGroupingSeparator,\n          isoCurrencyCodes = this.isoCurrencyCodes,\n          isMetric = this.isMetric,\n          isRTL = this.isRTL,\n          locale = this.locale,\n          locales = this.locales,\n          region = this.region,\n          timezone = this.timezone;\n      return {\n        currency: currency,\n        decimalSeparator: decimalSeparator,\n        digitGroupingSeparator: digitGroupingSeparator,\n        isoCurrencyCodes: isoCurrencyCodes,\n        isMetric: isMetric,\n        isRTL: isRTL,\n        locale: locale,\n        locales: locales,\n        region: region,\n        timezone: timezone\n      };\n    });\n\n    function getLocalizationAsync() {\n      return _getLocalizationAsync.apply(this, arguments);\n    }\n\n    return getLocalizationAsync;\n  }()\n};","map":{"version":3,"sources":["../src/ExpoLocalization.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-env browser */\nimport { Platform } from 'expo-modules-core';\nimport * as rtlDetect from 'rtl-detect';\n\nimport { Localization, Calendar, Locale, CalendarIdentifier } from './Localization.types';\n\nconst getNavigatorLocales = () => {\n  return Platform.isDOMAvailable ? navigator.languages || [navigator.language] : [];\n};\n\ntype ExtendedLocale = Intl.Locale &\n  // typescript definitions for navigator language don't include some modern Intl properties\n  Partial<{\n    textInfo: { direction: 'ltr' | 'rtl' };\n    timeZones: string[];\n    weekInfo: { firstDay: number };\n    hourCycles: string[];\n    timeZone: string;\n    calendars: string[];\n  }>;\n\nexport default {\n  get currency(): string | null {\n    // TODO: Add support\n    return null;\n  },\n  get decimalSeparator(): string {\n    return (1.1).toLocaleString().substring(1, 2);\n  },\n  get digitGroupingSeparator(): string {\n    const value = (1000).toLocaleString();\n    return value.length === 5 ? value.substring(1, 2) : '';\n  },\n  get isRTL(): boolean {\n    return rtlDetect.isRtlLang(this.locale) ?? false;\n  },\n  get isMetric(): boolean {\n    const { region } = this;\n    switch (region) {\n      case 'US': // USA\n      case 'LR': // Liberia\n      case 'MM': // Myanmar\n        return false;\n    }\n    return true;\n  },\n  get locale(): string {\n    if (!Platform.isDOMAvailable) {\n      return '';\n    }\n    const locale =\n      navigator.language ||\n      navigator['systemLanguage'] ||\n      navigator['browserLanguage'] ||\n      navigator['userLanguage'] ||\n      this.locales[0];\n    return locale;\n  },\n  get locales(): string[] {\n    if (!Platform.isDOMAvailable) {\n      return [];\n    }\n    const { languages = [] } = navigator;\n    return Array.from(languages);\n  },\n  get timezone(): string {\n    const defaultTimeZone = 'Etc/UTC';\n    if (typeof Intl === 'undefined') {\n      return defaultTimeZone;\n    }\n    return Intl.DateTimeFormat().resolvedOptions().timeZone || defaultTimeZone;\n  },\n  get isoCurrencyCodes(): string[] {\n    // TODO(Bacon): Add this - very low priority\n    return [];\n  },\n  get region(): string | null {\n    // There is no way to obtain the current region, as is possible on native.\n    // Instead, use the country-code from the locale when possible (e.g. \"en-US\").\n    const { locale } = this;\n    const [, ...suffixes] = typeof locale === 'string' ? locale.split('-') : [];\n    for (const suffix of suffixes) {\n      if (suffix.length === 2) {\n        return suffix.toUpperCase();\n      }\n    }\n    return null;\n  },\n\n  getLocales(): Locale[] {\n    const locales = getNavigatorLocales();\n    return locales?.map((languageTag) => {\n      // TextInfo is an experimental API that is not available in all browsers.\n      // We might want to consider using a locale lookup table instead.\n      const locale =\n        typeof Intl !== 'undefined'\n          ? (new Intl.Locale(languageTag) as unknown as ExtendedLocale)\n          : { region: null, textInfo: null, language: null };\n      const { region, textInfo, language } = locale;\n\n      // Properties added only for compatibility with native, use `toLocaleString` instead.\n      const digitGroupingSeparator =\n        Array.from((10000).toLocaleString(languageTag)).filter((c) => c > '9' || c < '0')[0] ||\n        null; // using 1e5 instead of 1e4 since for some locales (like pl-PL) 1e4 does not use digit grouping\n      const decimalSeparator = (1.1).toLocaleString(languageTag).substring(1, 2);\n\n      return {\n        languageTag,\n        languageCode: language || languageTag.split('-')[0] || 'en',\n        textDirection: (textInfo?.direction as 'ltr' | 'rtl') || null,\n        digitGroupingSeparator,\n        decimalSeparator,\n        measurementSystem: null,\n        currencyCode: null,\n        currencySymbol: null,\n        regionCode: region || null,\n      };\n    });\n  },\n  getCalendars(): Calendar[] {\n    // Prefer locales with region codes as they contain more info about calendar.\n    // They seem to always exist in the list for each locale without region\n    const locales = [...getNavigatorLocales()].sort((a, b) =>\n      a.includes('-') === b.includes('-') ? 0 : a.includes('-') ? -1 : 1\n    );\n    const locale = (locales[0] && typeof Intl !== 'undefined'\n      ? new Intl.Locale(locales[0])\n      : null) as unknown as null | ExtendedLocale;\n    return [\n      {\n        calendar: ((locale?.calendar || locale?.calendars?.[0]) as CalendarIdentifier) || null,\n        timeZone: locale?.timeZone || locale?.timeZones?.[0] || null,\n        uses24hourClock: (locale?.hourCycle || locale?.hourCycles?.[0])?.startsWith('h2') ?? null, //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale/hourCycle\n        firstWeekday: locale?.weekInfo?.firstDay || null,\n      },\n    ];\n  },\n  async getLocalizationAsync(): Promise<Omit<Localization, 'getCalendars' | 'getLocales'>> {\n    const {\n      currency,\n      decimalSeparator,\n      digitGroupingSeparator,\n      isoCurrencyCodes,\n      isMetric,\n      isRTL,\n      locale,\n      locales,\n      region,\n      timezone,\n    } = this;\n    return {\n      currency,\n      decimalSeparator,\n      digitGroupingSeparator,\n      isoCurrencyCodes,\n      isMetric,\n      isRTL,\n      locale,\n      locales,\n      region,\n      timezone,\n    };\n  },\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}