{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport Colors from \"../constants/colors\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport CheckBox from \"react-native-web/dist/exports/CheckBox\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport axios from \"axios\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport Constants from \"../constants/text\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      dataLoaded = _useState2[0],\n      setDataLoaded = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      onChangeemail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      onChangePassword = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      rememberMe = _useState8[0],\n      setrememberMe = _useState8[1];\n\n  var handleClick = function handleClick() {\n    return setrememberMe(!rememberMe);\n  };\n\n  var login = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var data = {\n          \"user_email\": email,\n          \"user_password\": \"12345\"\n        };\n        axios.post(Constants.ApiLink + \"/api/login\", data).then(function () {\n          var _ref3 = _asyncToGenerator(function* (response) {\n            try {\n              var jsonValue = JSON.stringify(response.data);\n              yield AsyncStorage.setItem(\"userData\", jsonValue);\n              console.log(\"data: \" + jsonValue);\n            } catch (e) {\n              console.log(\"Got error while storing data to async\" + e);\n            }\n          });\n\n          return function (_x) {\n            return _ref3.apply(this, arguments);\n          };\n        }()).catch(function (error) {\n          console.log(\"ERROR ON HOME\", error);\n        }).finally(function () {});\n        navigation.navigate('Home');\n      } catch (e) {\n        console.warn(e);\n      } finally {\n        setDataLoaded(true);\n      }\n    });\n\n    return function login() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      Splash = _useState10[0],\n      setSplash = _useState10[1];\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: {\n        flexDirection: \"row\"\n      },\n      children: _jsx(Image, {\n        source: require(\"../assets/images/logo.png\"),\n        style: styles.logo\n      })\n    }), _jsx(Text, {\n      style: styles.tagline,\n      children: \"Swachh\"\n    }), _jsxs(View, {\n      style: styles.form,\n      children: [_jsx(TextInput, {\n        style: styles.formInputs,\n        placeholder: \"Your email\",\n        placeholderTextColor: \"#95a5a6\",\n        onChangeText: function onChangeText(text) {\n          return onChangeemail(text);\n        },\n        value: email\n      }), _jsx(TextInput, {\n        style: styles.formInputs,\n        placeholder: \"Your password\",\n        placeholderTextColor: \"#95a5a6\",\n        onChangeText: function onChangeText(text) {\n          return onChangePassword(text);\n        },\n        value: password,\n        secureTextEntry: true\n      }), _jsxs(TouchableOpacity, {\n        style: styles.formButton,\n        onPress: login,\n        children: [_jsx(View, {\n          style: {\n            backgroundColor: \"black\",\n            padding: \"4%\",\n            borderRadius: 10\n          },\n          children: _jsx(FontAwesome5, {\n            name: \"arrow-right\",\n            size: 20,\n            color: \"white\"\n          })\n        }), _jsx(View, {\n          style: {\n            padding: \"4%\"\n          },\n          children: _jsx(Text, {\n            style: {\n              fontFamily: \"Quicksand-Bold\",\n              fontSize: Dimensions.get('window').height / 40\n            },\n            children: \"  Log in\"\n          })\n        })]\n      }), _jsxs(View, {\n        style: styles.textButtonsContainer,\n        children: [_jsx(Text, {\n          style: styles.labels,\n          children: \"Don't have an account?\"\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate('Register');\n          },\n          children: _jsx(Text, {\n            style: styles.textButton,\n            children: \"Sign up\"\n          })\n        })]\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    paddingHorizontal: '6%',\n    justifyContent: 'center'\n  },\n  logo: {\n    height: Dimensions.get('window').height / 4,\n    width: Dimensions.get('window').width / 1.6,\n    alignSelf: 'flex-start',\n    marginBottom: '8%'\n  },\n  tagline: {\n    fontFamily: \"Quicksand-Bold\",\n    fontSize: Dimensions.get('window').width / 10\n  },\n  form: {\n    paddingTop: \"6%\"\n  },\n  formInputs: {\n    height: Dimensions.get('window').height / 14,\n    borderRadius: 10,\n    backgroundColor: \"#ecf0f1\",\n    fontFamily: \"Quicksand-SemiBold\",\n    paddingHorizontal: \"5%\",\n    marginVertical: \"2%\",\n    fontSize: Dimensions.get('window').height / 42,\n    color: \"#34495e\"\n  },\n  formButton: {\n    flexDirection: 'row',\n    alignContent: \"center\",\n    alignItems: \"center\",\n    marginVertical: \"4%\"\n  },\n  checkbox: {\n    alignSelf: \"center\",\n    borderRadius: 10\n  },\n  rememberMe: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginVertical: \"4%\"\n  },\n  rememberMeLabel: {\n    fontFamily: \"Quicksand-SemiBold\",\n    fontSize: Dimensions.get('window').height / 45\n  },\n  labels: {\n    fontFamily: \"Quicksand-SemiBold\",\n    fontSize: Dimensions.get('window').height / 44\n  },\n  textButtonsContainer: {\n    paddingRight: \"2%\",\n    justifyContent: \"flex-end\",\n    marginVertical: \"6%\",\n    paddingBottom: \"5%\"\n  },\n  textButton: {\n    color: Colors.primaryColor,\n    fontFamily: \"Quicksand-Bold\",\n    fontSize: Dimensions.get('window').height / 42\n  }\n});","map":{"version":3,"sources":["D:/Deshna/Swachh-master/Swachh-master/app/screens/Login.js"],"names":["React","useState","useEffect","Colors","FontAwesome5","axios","AsyncStorage","Constants","Login","navigation","dataLoaded","setDataLoaded","email","onChangeemail","password","onChangePassword","rememberMe","setrememberMe","handleClick","login","data","post","ApiLink","then","response","jsonValue","JSON","stringify","setItem","console","log","e","catch","error","finally","navigate","warn","Splash","setSplash","styles","container","flexDirection","require","logo","tagline","form","formInputs","text","formButton","backgroundColor","padding","borderRadius","fontFamily","fontSize","Dimensions","get","height","textButtonsContainer","labels","textButton","StyleSheet","create","flex","paddingHorizontal","justifyContent","width","alignSelf","marginBottom","paddingTop","marginVertical","color","alignContent","alignItems","checkbox","rememberMeLabel","paddingRight","paddingBottom","primaryColor"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP;;;;;;;;;;AAGA,SAASC,YAAT,QAA6B,oBAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAOC,SAAP;;;AACA,eAAe,SAASC,KAAT,OAA+B;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAC1C,kBAAoCR,QAAQ,CAAC,KAAD,CAA5C;AAAA;AAAA,MAAOS,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAA+BV,QAAQ,CAAC,EAAD,CAAvC;AAAA;AAAA,MAAOW,KAAP;AAAA,MAAcC,aAAd;;AACA,mBAAqCZ,QAAQ,CAAC,EAAD,CAA7C;AAAA;AAAA,MAAOa,QAAP;AAAA,MAAiBC,gBAAjB;;AACA,mBAAoCd,QAAQ,CAAC,KAAD,CAA5C;AAAA;AAAA,MAAOe,UAAP;AAAA,MAAmBC,aAAnB;;AACA,MAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,WAAMD,aAAa,CAAC,CAACD,UAAF,CAAnB;AAAA,GAApB;;AAKA,MAAMG,KAAK;AAAA,kCAAG,aAAY;AACtB,UAAI;AACA,YAAMC,IAAI,GAAC;AACP,wBAAcR,KADP;AAEP,2BAAiB;AAFV,SAAX;AAIAP,QAAAA,KAAK,CACAgB,IADL,CACad,SAAS,CAACe,OADvB,iBAC4CF,IAD5C,EAEKG,IAFL;AAAA,wCAEU,WAAgBC,QAAhB,EAA0B;AAG5B,gBAAI;AACA,kBAAMC,SAAS,GAAGC,IAAI,CAACC,SAAL,CAAeH,QAAQ,CAACJ,IAAxB,CAAlB;AACA,oBAAMd,YAAY,CAACsB,OAAb,CAAqB,UAArB,EAAiCH,SAAjC,CAAN;AACAI,cAAAA,OAAO,CAACC,GAAR,CAAY,WAAWL,SAAvB;AACH,aAJD,CAIE,OAAOM,CAAP,EAAU;AAERF,cAAAA,OAAO,CAACC,GAAR,CAAY,0CAA0CC,CAAtD;AACH;AACJ,WAbL;;AAAA;AAAA;AAAA;AAAA,aAcKC,KAdL,CAcW,UAAUC,KAAV,EAAiB;AAEpBJ,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BG,KAA7B;AACH,SAjBL,EAkBKC,OAlBL,CAkBa,YAAY,CAEpB,CApBL;AAqBAzB,QAAAA,UAAU,CAAC0B,QAAX,CAAoB,MAApB;AAEH,OA5BD,CA4BE,OAAOJ,CAAP,EAAU;AACRF,QAAAA,OAAO,CAACO,IAAR,CAAaL,CAAb;AACH,OA9BD,SA8BU;AACNpB,QAAAA,aAAa,CAAC,IAAD,CAAb;AAGH;AACJ,KApCU;;AAAA,oBAALQ,KAAK;AAAA;AAAA;AAAA,KAAX;;AAsCA,mBAA4BlB,QAAQ,CAAC,IAAD,CAApC;AAAA;AAAA,MAAOoC,MAAP;AAAA,MAAeC,SAAf;;AAEA,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,eACI,KAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,aAAa,EAAE;AAAjB,OAAb;AAAA,gBACI,KAAC,KAAD;AAAO,QAAA,MAAM,EAAEC,OAAO,6BAAtB;AAAqD,QAAA,KAAK,EAAEH,MAAM,CAACI;AAAnE;AADJ,MADJ,EAII,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEJ,MAAM,CAACK,OAApB;AAAA;AAAA,MAJJ,EAKI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEL,MAAM,CAACM,IAApB;AAAA,iBACI,KAAC,SAAD;AACI,QAAA,KAAK,EAAEN,MAAM,CAACO,UADlB;AAEI,QAAA,WAAW,EAAC,YAFhB;AAGI,QAAA,oBAAoB,EAAC,SAHzB;AAII,QAAA,YAAY,EAAE,sBAAAC,IAAI;AAAA,iBAAIlC,aAAa,CAACkC,IAAD,CAAjB;AAAA,SAJtB;AAKI,QAAA,KAAK,EAAEnC;AALX,QADJ,EAQI,KAAC,SAAD;AACI,QAAA,KAAK,EAAE2B,MAAM,CAACO,UADlB;AAEI,QAAA,WAAW,EAAC,eAFhB;AAGI,QAAA,oBAAoB,EAAC,SAHzB;AAII,QAAA,YAAY,EAAE,sBAAAC,IAAI;AAAA,iBAAIhC,gBAAgB,CAACgC,IAAD,CAApB;AAAA,SAJtB;AAKI,QAAA,KAAK,EAAEjC,QALX;AAMI,QAAA,eAAe,EAAE;AANrB,QARJ,EAgBI,MAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEyB,MAAM,CAACS,UAAhC;AAA4C,QAAA,OAAO,EAAE7B,KAArD;AAAA,mBACI,KAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAE8B,YAAAA,eAAe,EAAE,OAAnB;AAA4BC,YAAAA,OAAO,EAAE,IAArC;AAA2CC,YAAAA,YAAY,EAAE;AAAzD,WAAb;AAAA,oBACI,KAAC,YAAD;AAAc,YAAA,IAAI,EAAC,aAAnB;AAAiC,YAAA,IAAI,EAAE,EAAvC;AAA2C,YAAA,KAAK,EAAC;AAAjD;AADJ,UADJ,EAII,KAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAED,YAAAA,OAAO,EAAE;AAAX,WAAb;AAAA,oBACI,KAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAAEE,cAAAA,UAAU,EAAE,gBAAd;AAAgCC,cAAAA,QAAQ,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,MAAzB,GAAkC;AAA5E,aAAb;AAAA;AAAA;AADJ,UAJJ;AAAA,QAhBJ,EAyBI,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEjB,MAAM,CAACkB,oBAApB;AAAA,mBACI,KAAC,IAAD;AAAM,UAAA,KAAK,EAAElB,MAAM,CAACmB,MAApB;AAAA;AAAA,UADJ,EAEI,KAAC,gBAAD;AAAkB,UAAA,OAAO,EAAE;AAAA,mBAAMjD,UAAU,CAAC0B,QAAX,CAAoB,UAApB,CAAN;AAAA,WAA3B;AAAA,oBACI,KAAC,IAAD;AAAM,YAAA,KAAK,EAAEI,MAAM,CAACoB,UAApB;AAAA;AAAA;AADJ,UAFJ;AAAA,QAzBJ;AAAA,MALJ;AAAA,IADJ;AAwCH;AAED,IAAMpB,MAAM,GAAGqB,UAAU,CAACC,MAAX,CAAkB;AAC7BrB,EAAAA,SAAS,EAAE;AACPsB,IAAAA,IAAI,EAAE,CADC;AAEPb,IAAAA,eAAe,EAAE,MAFV;AAGPc,IAAAA,iBAAiB,EAAE,IAHZ;AAIPC,IAAAA,cAAc,EAAE;AAJT,GADkB;AAO7BrB,EAAAA,IAAI,EAAE;AACFa,IAAAA,MAAM,EAAEF,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,MAAzB,GAAkC,CADxC;AAEFS,IAAAA,KAAK,EAAEX,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBU,KAAzB,GAAiC,GAFtC;AAGFC,IAAAA,SAAS,EAAE,YAHT;AAIFC,IAAAA,YAAY,EAAE;AAJZ,GAPuB;AAa7BvB,EAAAA,OAAO,EAAE;AACLQ,IAAAA,UAAU,EAAE,gBADP;AAELC,IAAAA,QAAQ,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBU,KAAzB,GAAiC;AAFtC,GAboB;AAiB7BpB,EAAAA,IAAI,EAAE;AACFuB,IAAAA,UAAU,EAAE;AADV,GAjBuB;AAoB7BtB,EAAAA,UAAU,EAAE;AACRU,IAAAA,MAAM,EAAEF,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,MAAzB,GAAkC,EADlC;AAERL,IAAAA,YAAY,EAAE,EAFN;AAGRF,IAAAA,eAAe,EAAE,SAHT;AAIRG,IAAAA,UAAU,EAAE,oBAJJ;AAKRW,IAAAA,iBAAiB,EAAE,IALX;AAMRM,IAAAA,cAAc,EAAE,IANR;AAORhB,IAAAA,QAAQ,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,MAAzB,GAAkC,EAPpC;AAQRc,IAAAA,KAAK,EAAE;AARC,GApBiB;AA8B7BtB,EAAAA,UAAU,EAAE;AACRP,IAAAA,aAAa,EAAE,KADP;AAER8B,IAAAA,YAAY,EAAE,QAFN;AAGRC,IAAAA,UAAU,EAAE,QAHJ;AAIRH,IAAAA,cAAc,EAAE;AAJR,GA9BiB;AAqC7BI,EAAAA,QAAQ,EAAE;AACNP,IAAAA,SAAS,EAAE,QADL;AAENf,IAAAA,YAAY,EAAE;AAFR,GArCmB;AA0C7BnC,EAAAA,UAAU,EAAE;AACRyB,IAAAA,aAAa,EAAE,KADP;AAER+B,IAAAA,UAAU,EAAE,QAFJ;AAGRH,IAAAA,cAAc,EAAE;AAHR,GA1CiB;AAgD7BK,EAAAA,eAAe,EAAE;AACbtB,IAAAA,UAAU,EAAE,oBADC;AAEbC,IAAAA,QAAQ,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,MAAzB,GAAkC;AAF/B,GAhDY;AAoD7BE,EAAAA,MAAM,EAAE;AACJN,IAAAA,UAAU,EAAE,oBADR;AAEJC,IAAAA,QAAQ,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,MAAzB,GAAkC;AAFxC,GApDqB;AAyD7BC,EAAAA,oBAAoB,EAAE;AAClBkB,IAAAA,YAAY,EAAE,IADI;AAElBX,IAAAA,cAAc,EAAE,UAFE;AAGlBK,IAAAA,cAAc,EAAE,IAHE;AAIlBO,IAAAA,aAAa,EAAE;AAJG,GAzDO;AA+D7BjB,EAAAA,UAAU,EAAE;AACRW,IAAAA,KAAK,EAAEnE,MAAM,CAAC0E,YADN;AAERzB,IAAAA,UAAU,EAAE,gBAFJ;AAGRC,IAAAA,QAAQ,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,MAAzB,GAAkC;AAHpC;AA/DiB,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Colors from '../constants/colors';\nimport { StyleSheet, Text, View, Image, TextInput, CheckBox, TouchableOpacity, StatusBar } from 'react-native';\nimport { Dimensions } from 'react-native'\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport axios from \"axios\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport Constants from '../constants/text';\nexport default function Login({ navigation }) {\n    const [dataLoaded, setDataLoaded] = useState(false);\n    const [email, onChangeemail] = useState('');\n    const [password, onChangePassword] = useState('');\n    const [rememberMe, setrememberMe] = useState(false);\n    const handleClick = () => setrememberMe(!rememberMe)\n\n\n\n\n    const login = async () => {\n        try {\n            const data={\n                \"user_email\": email,\n                \"user_password\": \"12345\"\n            }\n            axios\n                .post(`${Constants.ApiLink}/api/login`, data)\n                .then(async function (response) {\n                    // handle success\n\n                    try {\n                        const jsonValue = JSON.stringify(response.data);\n                        await AsyncStorage.setItem(\"userData\", jsonValue);\n                        console.log(\"data: \" + jsonValue);\n                    } catch (e) {\n                        // saving error\n                        console.log(\"Got error while storing data to async\" + e);\n                    }\n                })\n                .catch(function (error) {\n                    // handle error\n                    console.log(\"ERROR ON HOME\", error);\n                })\n                .finally(function () {\n                    // always executed\n                });\n            navigation.navigate('Home')\n            // await fetchFonts();\n        } catch (e) {\n            console.warn(e);\n        } finally {\n            setDataLoaded(true);\n            // Hiding the SplashScreen\n\n        }\n    }\n\n    const [Splash, setSplash] = useState(true)\n\n    return (\n        <View style={styles.container}>\n            <View style={{ flexDirection: \"row\" }}>\n                <Image source={require('../assets/images/logo.png')} style={styles.logo} />\n            </View>\n            <Text style={styles.tagline}>Swachh</Text>\n            <View style={styles.form}>\n                <TextInput\n                    style={styles.formInputs}\n                    placeholder=\"Your email\"\n                    placeholderTextColor=\"#95a5a6\"\n                    onChangeText={text => onChangeemail(text)}\n                    value={email}\n                />\n                <TextInput\n                    style={styles.formInputs}\n                    placeholder=\"Your password\"\n                    placeholderTextColor=\"#95a5a6\"\n                    onChangeText={text => onChangePassword(text)}\n                    value={password}\n                    secureTextEntry={true}\n                />\n                <TouchableOpacity style={styles.formButton} onPress={login}>\n                    <View style={{ backgroundColor: \"black\", padding: \"4%\", borderRadius: 10 }}>\n                        <FontAwesome5 name=\"arrow-right\" size={20} color=\"white\" />\n                    </View>\n                    <View style={{ padding: \"4%\", }}>\n                        <Text style={{ fontFamily: \"Quicksand-Bold\", fontSize: Dimensions.get('window').height / 40 }}>  Log in</Text>\n                    </View>\n                </TouchableOpacity>\n\n                <View style={styles.textButtonsContainer}>\n                    <Text style={styles.labels}>Don't have an account?</Text>\n                    <TouchableOpacity onPress={() => navigation.navigate('Register')}>\n                        <Text style={styles.textButton}>Sign up</Text>\n                    </TouchableOpacity>\n                </View>\n            </View>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        paddingHorizontal: '6%',\n        justifyContent: 'center'\n    },\n    logo: {\n        height: Dimensions.get('window').height / 4,\n        width: Dimensions.get('window').width / 1.6,\n        alignSelf: 'flex-start',\n        marginBottom: '8%'\n    },\n    tagline: {\n        fontFamily: \"Quicksand-Bold\",\n        fontSize: Dimensions.get('window').width / 10,\n    },\n    form: {\n        paddingTop: \"6%\"\n    },\n    formInputs: {\n        height: Dimensions.get('window').height / 14,\n        borderRadius: 10,\n        backgroundColor: \"#ecf0f1\",\n        fontFamily: \"Quicksand-SemiBold\",\n        paddingHorizontal: \"5%\",\n        marginVertical: \"2%\",\n        fontSize: Dimensions.get('window').height / 42,\n        color: \"#34495e\"\n    },\n    formButton: {\n        flexDirection: 'row',\n        alignContent: \"center\",\n        alignItems: \"center\",\n        marginVertical: \"4%\"\n\n    },\n    checkbox: {\n        alignSelf: \"center\",\n        borderRadius: 10,\n\n    },\n    rememberMe: {\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        marginVertical: \"4%\",\n\n    },\n    rememberMeLabel: {\n        fontFamily: \"Quicksand-SemiBold\",\n        fontSize: Dimensions.get('window').height / 45,\n    },\n    labels: {\n        fontFamily: \"Quicksand-SemiBold\",\n        fontSize: Dimensions.get('window').height / 44,\n\n    },\n    textButtonsContainer: {\n        paddingRight: \"2%\",\n        justifyContent: \"flex-end\",\n        marginVertical: \"6%\",\n        paddingBottom: \"5%\"\n    },\n    textButton: {\n        color: Colors.primaryColor,\n        fontFamily: \"Quicksand-Bold\",\n        fontSize: Dimensions.get('window').height / 42,\n    }\n});"]},"metadata":{},"sourceType":"module"}