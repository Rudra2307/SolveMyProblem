{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport Colors from \"../constants/colors\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport CheckBox from \"react-native-web/dist/exports/CheckBox\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport axios from \"axios\";\nimport Constants from \"../constants/text\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Register(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      dataLoaded = _useState2[0],\n      setDataLoaded = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      phone = _useState4[0],\n      onChangephone = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      email = _useState6[0],\n      onChangeemail = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      name = _useState8[0],\n      onChangeName = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      password = _useState10[0],\n      onChangePassword = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      rememberMe = _useState12[0],\n      setrememberMe = _useState12[1];\n\n  var handleClick = function handleClick() {\n    return setrememberMe(!rememberMe);\n  };\n\n  var register = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var data = {\n          \"user_email\": email,\n          \"user_name\": name,\n          \"user_phone\": phone,\n          \"user_password\": password,\n          \"user_type\": \"general\"\n        };\n        axios.post(Constants.ApiLink + \"/api/register\", data).then(function () {\n          var _ref3 = _asyncToGenerator(function* (response) {\n            try {\n              var jsonValue = JSON.stringify(response.data);\n              console.log(\"data: \" + jsonValue);\n            } catch (e) {\n              console.log(\"Got error while storing data to async\" + e);\n            }\n          });\n\n          return function (_x) {\n            return _ref3.apply(this, arguments);\n          };\n        }());\n        console.log(name, phone, password);\n        navigation.navigate('Home');\n      } catch (e) {\n        console.warn(e);\n      } finally {\n        setDataLoaded(true);\n      }\n    });\n\n    return function register() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: {\n        flexDirection: \"row\"\n      },\n      children: _jsx(Image, {\n        source: require(\"../assets/images/logo.png\"),\n        style: styles.logo\n      })\n    }), _jsx(Text, {\n      style: styles.tagline,\n      children: \"Register\"\n    }), _jsxs(View, {\n      style: styles.form,\n      children: [_jsx(TextInput, {\n        style: styles.formInputs,\n        placeholder: \"Your full name\",\n        placeholderTextColor: \"#95a5a6\",\n        onChangeText: function onChangeText(text) {\n          return onChangeName(text);\n        },\n        value: name\n      }), _jsx(TextInput, {\n        style: styles.formInputs,\n        placeholder: \"Your phone\",\n        placeholderTextColor: \"#95a5a6\",\n        onChangeText: function onChangeText(text) {\n          return onChangephone(text);\n        },\n        value: phone\n      }), _jsx(TextInput, {\n        style: styles.formInputs,\n        placeholder: \"Your email\",\n        placeholderTextColor: \"#95a5a6\",\n        onChangeText: function onChangeText(text) {\n          return onChangeemail(text);\n        },\n        value: email\n      }), _jsx(TextInput, {\n        style: styles.formInputs,\n        placeholder: \"Your password\",\n        placeholderTextColor: \"#95a5a6\",\n        onChangeText: function onChangeText(text) {\n          return onChangePassword(text);\n        },\n        value: password,\n        secureTextEntry: true\n      }), _jsxs(TouchableOpacity, {\n        style: styles.formButton,\n        onPress: register,\n        children: [_jsx(View, {\n          style: {\n            backgroundColor: \"black\",\n            padding: \"4%\",\n            borderRadius: 10\n          },\n          children: _jsx(FontAwesome5, {\n            name: \"arrow-right\",\n            size: 20,\n            color: \"white\"\n          })\n        }), _jsx(View, {\n          style: {\n            padding: \"4%\"\n          },\n          children: _jsx(Text, {\n            style: {\n              fontFamily: \"Quicksand-Bold\",\n              fontSize: Dimensions.get('window').height / 40\n            },\n            children: \"  Sign up\"\n          })\n        })]\n      }), _jsxs(View, {\n        style: styles.textButtonsContainer,\n        children: [_jsx(Text, {\n          style: styles.labels,\n          children: \"Already have an account?\"\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate('Login');\n          },\n          children: _jsx(Text, {\n            style: styles.textButton,\n            children: \"Log in\"\n          })\n        })]\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    paddingHorizontal: '6%',\n    justifyContent: 'center',\n    marginTop: StatusBar.currentHeight\n  },\n  logo: {\n    height: Dimensions.get('window').height / 4,\n    width: Dimensions.get('window').width / 1.6,\n    alignSelf: 'flex-start',\n    marginBottom: '8%'\n  },\n  tagline: {\n    fontFamily: \"Quicksand-Bold\",\n    fontSize: Dimensions.get('window').width / 12\n  },\n  form: {\n    paddingTop: \"6%\"\n  },\n  formInputs: {\n    height: Dimensions.get('window').height / 14,\n    borderRadius: 10,\n    backgroundColor: \"#ecf0f1\",\n    fontFamily: \"Quicksand-SemiBold\",\n    paddingHorizontal: \"5%\",\n    marginVertical: \"2%\",\n    fontSize: Dimensions.get('window').height / 42,\n    color: \"#34495e\"\n  },\n  formButton: {\n    flexDirection: 'row',\n    alignContent: \"center\",\n    alignItems: \"center\",\n    marginVertical: \"4%\"\n  },\n  checkbox: {\n    alignSelf: \"center\",\n    borderRadius: 10\n  },\n  rememberMe: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginVertical: \"4%\"\n  },\n  rememberMeLabel: {\n    fontFamily: \"Quicksand-SemiBold\",\n    fontSize: Dimensions.get('window').height / 45\n  },\n  labels: {\n    fontFamily: \"Quicksand-SemiBold\",\n    fontSize: Dimensions.get('window').height / 44\n  },\n  textButtonsContainer: {\n    paddingRight: \"2%\",\n    justifyContent: \"flex-end\",\n    marginVertical: \"6%\",\n    paddingBottom: \"5%\"\n  },\n  textButton: {\n    color: Colors.primaryColor,\n    fontFamily: \"Quicksand-Bold\",\n    fontSize: Dimensions.get('window').height / 42\n  }\n});","map":{"version":3,"sources":["D:/Deshna/Swachh-master/Swachh-master/app/screens/register.js"],"names":["React","useState","useEffect","Colors","FontAwesome5","axios","Constants","Register","navigation","dataLoaded","setDataLoaded","phone","onChangephone","email","onChangeemail","name","onChangeName","password","onChangePassword","rememberMe","setrememberMe","handleClick","register","data","post","ApiLink","then","response","jsonValue","JSON","stringify","console","log","e","navigate","warn","styles","container","flexDirection","require","logo","tagline","form","formInputs","text","formButton","backgroundColor","padding","borderRadius","fontFamily","fontSize","Dimensions","get","height","textButtonsContainer","labels","textButton","StyleSheet","create","flex","paddingHorizontal","justifyContent","marginTop","StatusBar","currentHeight","width","alignSelf","marginBottom","paddingTop","marginVertical","color","alignContent","alignItems","checkbox","rememberMeLabel","paddingRight","paddingBottom","primaryColor"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP;;;;;;;;;;AAGA,SAASC,YAAT,QAA6B,oBAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP;;;AACA,eAAe,SAASC,QAAT,OAAkC;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAC7C,kBAAoCP,QAAQ,CAAC,KAAD,CAA5C;AAAA;AAAA,MAAOQ,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAA+BT,QAAQ,CAAC,EAAD,CAAvC;AAAA;AAAA,MAAOU,KAAP;AAAA,MAAcC,aAAd;;AACA,mBAA+BX,QAAQ,CAAC,EAAD,CAAvC;AAAA;AAAA,MAAOY,KAAP;AAAA,MAAcC,aAAd;;AACA,mBAA6Bb,QAAQ,CAAC,EAAD,CAArC;AAAA;AAAA,MAAOc,IAAP;AAAA,MAAaC,YAAb;;AACA,mBAAqCf,QAAQ,CAAC,EAAD,CAA7C;AAAA;AAAA,MAAOgB,QAAP;AAAA,MAAiBC,gBAAjB;;AACA,oBAAoCjB,QAAQ,CAAC,KAAD,CAA5C;AAAA;AAAA,MAAOkB,UAAP;AAAA,MAAmBC,aAAnB;;AACA,MAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,WAAMD,aAAa,CAAC,CAACD,UAAF,CAAnB;AAAA,GAApB;;AAEA,MAAMG,QAAQ;AAAA,kCAAG,aAAY;AACzB,UAAI;AAEA,YAAMC,IAAI,GAAG;AACT,wBAAcV,KADL;AAET,uBAAaE,IAFJ;AAGT,wBAAcJ,KAHL;AAIT,2BAAiBM,QAJR;AAKT,uBAAa;AALJ,SAAb;AAOAZ,QAAAA,KAAK,CACAmB,IADL,CACalB,SAAS,CAACmB,OADvB,oBAC+CF,IAD/C,EAEKG,IAFL;AAAA,wCAEU,WAAgBC,QAAhB,EAA0B;AAG5B,gBAAI;AACA,kBAAMC,SAAS,GAAGC,IAAI,CAACC,SAAL,CAAeH,QAAQ,CAACJ,IAAxB,CAAlB;AAEAQ,cAAAA,OAAO,CAACC,GAAR,CAAY,WAAWJ,SAAvB;AACH,aAJD,CAIE,OAAOK,CAAP,EAAU;AAERF,cAAAA,OAAO,CAACC,GAAR,CAAY,0CAA0CC,CAAtD;AACH;AACJ,WAbL;;AAAA;AAAA;AAAA;AAAA;AAgBAF,QAAAA,OAAO,CAACC,GAAR,CAAYjB,IAAZ,EAAkBJ,KAAlB,EAAyBM,QAAzB;AACAT,QAAAA,UAAU,CAAC0B,QAAX,CAAoB,MAApB;AACH,OA3BD,CA2BE,OAAOD,CAAP,EAAU;AACRF,QAAAA,OAAO,CAACI,IAAR,CAAaF,CAAb;AACH,OA7BD,SA6BU;AACNvB,QAAAA,aAAa,CAAC,IAAD,CAAb;AAGH;AACJ,KAnCa;;AAAA,oBAARY,QAAQ;AAAA;AAAA;AAAA,KAAd;;AAuCA,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEc,MAAM,CAACC,SAApB;AAAA,eACI,KAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,aAAa,EAAE;AAAjB,OAAb;AAAA,gBACI,KAAC,KAAD;AAAO,QAAA,MAAM,EAAEC,OAAO,6BAAtB;AAAqD,QAAA,KAAK,EAAEH,MAAM,CAACI;AAAnE;AADJ,MADJ,EAII,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEJ,MAAM,CAACK,OAApB;AAAA;AAAA,MAJJ,EAKI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEL,MAAM,CAACM,IAApB;AAAA,iBACI,KAAC,SAAD;AACI,QAAA,KAAK,EAAEN,MAAM,CAACO,UADlB;AAEI,QAAA,WAAW,EAAC,gBAFhB;AAGI,QAAA,oBAAoB,EAAC,SAHzB;AAII,QAAA,YAAY,EAAE,sBAAAC,IAAI;AAAA,iBAAI5B,YAAY,CAAC4B,IAAD,CAAhB;AAAA,SAJtB;AAKI,QAAA,KAAK,EAAE7B;AALX,QADJ,EAOM,KAAC,SAAD;AACE,QAAA,KAAK,EAAEqB,MAAM,CAACO,UADhB;AAEE,QAAA,WAAW,EAAC,YAFd;AAGE,QAAA,oBAAoB,EAAC,SAHvB;AAIE,QAAA,YAAY,EAAE,sBAAAC,IAAI;AAAA,iBAAIhC,aAAa,CAACgC,IAAD,CAAjB;AAAA,SAJpB;AAKE,QAAA,KAAK,EAAEjC;AALT,QAPN,EAcI,KAAC,SAAD;AACI,QAAA,KAAK,EAAEyB,MAAM,CAACO,UADlB;AAEI,QAAA,WAAW,EAAC,YAFhB;AAGI,QAAA,oBAAoB,EAAC,SAHzB;AAII,QAAA,YAAY,EAAE,sBAAAC,IAAI;AAAA,iBAAI9B,aAAa,CAAC8B,IAAD,CAAjB;AAAA,SAJtB;AAKI,QAAA,KAAK,EAAE/B;AALX,QAdJ,EAqBI,KAAC,SAAD;AACI,QAAA,KAAK,EAAEuB,MAAM,CAACO,UADlB;AAEI,QAAA,WAAW,EAAC,eAFhB;AAGI,QAAA,oBAAoB,EAAC,SAHzB;AAII,QAAA,YAAY,EAAE,sBAAAC,IAAI;AAAA,iBAAI1B,gBAAgB,CAAC0B,IAAD,CAApB;AAAA,SAJtB;AAKI,QAAA,KAAK,EAAE3B,QALX;AAMI,QAAA,eAAe,EAAE;AANrB,QArBJ,EA6BI,MAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEmB,MAAM,CAACS,UAAhC;AAA4C,QAAA,OAAO,EAAEvB,QAArD;AAAA,mBACI,KAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEwB,YAAAA,eAAe,EAAE,OAAnB;AAA4BC,YAAAA,OAAO,EAAE,IAArC;AAA2CC,YAAAA,YAAY,EAAE;AAAzD,WAAb;AAAA,oBACI,KAAC,YAAD;AAAc,YAAA,IAAI,EAAC,aAAnB;AAAiC,YAAA,IAAI,EAAE,EAAvC;AAA2C,YAAA,KAAK,EAAC;AAAjD;AADJ,UADJ,EAII,KAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAED,YAAAA,OAAO,EAAE;AAAX,WAAb;AAAA,oBACI,KAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAAEE,cAAAA,UAAU,EAAE,gBAAd;AAAgCC,cAAAA,QAAQ,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,MAAzB,GAAkC;AAA5E,aAAb;AAAA;AAAA;AADJ,UAJJ;AAAA,QA7BJ,EAsCI,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEjB,MAAM,CAACkB,oBAApB;AAAA,mBACI,KAAC,IAAD;AAAM,UAAA,KAAK,EAAElB,MAAM,CAACmB,MAApB;AAAA;AAAA,UADJ,EAEI,KAAC,gBAAD;AAAkB,UAAA,OAAO,EAAE;AAAA,mBAAM/C,UAAU,CAAC0B,QAAX,CAAoB,OAApB,CAAN;AAAA,WAA3B;AAAA,oBACI,KAAC,IAAD;AAAM,YAAA,KAAK,EAAEE,MAAM,CAACoB,UAApB;AAAA;AAAA;AADJ,UAFJ;AAAA,QAtCJ;AAAA,MALJ;AAAA,IADJ;AAqDH;AAGD,IAAMpB,MAAM,GAAGqB,UAAU,CAACC,MAAX,CAAkB;AAC7BrB,EAAAA,SAAS,EAAE;AACPsB,IAAAA,IAAI,EAAE,CADC;AAEPb,IAAAA,eAAe,EAAE,MAFV;AAGPc,IAAAA,iBAAiB,EAAE,IAHZ;AAIPC,IAAAA,cAAc,EAAE,QAJT;AAKPC,IAAAA,SAAS,EAAEC,SAAS,CAACC;AALd,GADkB;AAQ7BxB,EAAAA,IAAI,EAAE;AACFa,IAAAA,MAAM,EAAEF,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,MAAzB,GAAkC,CADxC;AAEFY,IAAAA,KAAK,EAAEd,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBa,KAAzB,GAAiC,GAFtC;AAGFC,IAAAA,SAAS,EAAE,YAHT;AAIFC,IAAAA,YAAY,EAAE;AAJZ,GARuB;AAc7B1B,EAAAA,OAAO,EAAE;AACLQ,IAAAA,UAAU,EAAE,gBADP;AAELC,IAAAA,QAAQ,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBa,KAAzB,GAAiC;AAFtC,GAdoB;AAkB7BvB,EAAAA,IAAI,EAAE;AACF0B,IAAAA,UAAU,EAAE;AADV,GAlBuB;AAqB7BzB,EAAAA,UAAU,EAAE;AACRU,IAAAA,MAAM,EAAEF,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,MAAzB,GAAkC,EADlC;AAERL,IAAAA,YAAY,EAAE,EAFN;AAGRF,IAAAA,eAAe,EAAE,SAHT;AAIRG,IAAAA,UAAU,EAAE,oBAJJ;AAKRW,IAAAA,iBAAiB,EAAE,IALX;AAMRS,IAAAA,cAAc,EAAE,IANR;AAORnB,IAAAA,QAAQ,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,MAAzB,GAAkC,EAPpC;AAQRiB,IAAAA,KAAK,EAAE;AARC,GArBiB;AA+B7BzB,EAAAA,UAAU,EAAE;AACRP,IAAAA,aAAa,EAAE,KADP;AAERiC,IAAAA,YAAY,EAAE,QAFN;AAGRC,IAAAA,UAAU,EAAE,QAHJ;AAIRH,IAAAA,cAAc,EAAE;AAJR,GA/BiB;AAsC7BI,EAAAA,QAAQ,EAAE;AACNP,IAAAA,SAAS,EAAE,QADL;AAENlB,IAAAA,YAAY,EAAE;AAFR,GAtCmB;AA2C7B7B,EAAAA,UAAU,EAAE;AACRmB,IAAAA,aAAa,EAAE,KADP;AAERkC,IAAAA,UAAU,EAAE,QAFJ;AAGRH,IAAAA,cAAc,EAAE;AAHR,GA3CiB;AAiD7BK,EAAAA,eAAe,EAAE;AACbzB,IAAAA,UAAU,EAAE,oBADC;AAEbC,IAAAA,QAAQ,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,MAAzB,GAAkC;AAF/B,GAjDY;AAqD7BE,EAAAA,MAAM,EAAE;AACJN,IAAAA,UAAU,EAAE,oBADR;AAEJC,IAAAA,QAAQ,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,MAAzB,GAAkC;AAFxC,GArDqB;AA0D7BC,EAAAA,oBAAoB,EAAE;AAClBqB,IAAAA,YAAY,EAAE,IADI;AAElBd,IAAAA,cAAc,EAAE,UAFE;AAGlBQ,IAAAA,cAAc,EAAE,IAHE;AAIlBO,IAAAA,aAAa,EAAE;AAJG,GA1DO;AAgE7BpB,EAAAA,UAAU,EAAE;AACRc,IAAAA,KAAK,EAAEnE,MAAM,CAAC0E,YADN;AAER5B,IAAAA,UAAU,EAAE,gBAFJ;AAGRC,IAAAA,QAAQ,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,MAAzB,GAAkC;AAHpC;AAhEiB,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Colors from '../constants/colors';\nimport { StyleSheet, Text, View, Image, TextInput, CheckBox, TouchableOpacity, StatusBar } from 'react-native';\nimport { Dimensions } from 'react-native'\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport axios from \"axios\";\nimport Constants from '../constants/text';\nexport default function Register({ navigation }) {\n    const [dataLoaded, setDataLoaded] = useState(false);\n    const [phone, onChangephone] = useState('');\n    const [email, onChangeemail] = useState('');\n    const [name, onChangeName] = useState('');\n    const [password, onChangePassword] = useState('');\n    const [rememberMe, setrememberMe] = useState(false);\n    const handleClick = () => setrememberMe(!rememberMe)\n\n    const register = async () => {\n        try {\n            // Keep on showing the SlashScreen\n            const data = {\n                \"user_email\": email,\n                \"user_name\": name,\n                \"user_phone\": phone,\n                \"user_password\": password,\n                \"user_type\": \"general\"\n            }\n            axios\n                .post(`${Constants.ApiLink}/api/register`, data)\n                .then(async function (response) {\n                    // handle success\n\n                    try {\n                        const jsonValue = JSON.stringify(response.data);\n                        // await AsyncStorage.setItem(\"userData\", jsonValue);\n                        console.log(\"data: \" + jsonValue);\n                    } catch (e) {\n                        // saving error\n                        console.log(\"Got error while storing data to async\" + e);\n                    }\n                })\n\n\n            console.log(name, phone, password);\n            navigation.navigate('Home')\n        } catch (e) {\n            console.warn(e);\n        } finally {\n            setDataLoaded(true);\n            // Hiding the SplashScreen\n\n        }\n    }\n\n\n\n    return (\n        <View style={styles.container}>\n            <View style={{ flexDirection: \"row\" }}>\n                <Image source={require('../assets/images/logo.png')} style={styles.logo} />\n            </View>\n            <Text style={styles.tagline}>Register</Text>\n            <View style={styles.form}>\n                <TextInput\n                    style={styles.formInputs}\n                    placeholder=\"Your full name\"\n                    placeholderTextColor=\"#95a5a6\"\n                    onChangeText={text => onChangeName(text)}\n                    value={name}\n                /><TextInput\n                    style={styles.formInputs}\n                    placeholder=\"Your phone\"\n                    placeholderTextColor=\"#95a5a6\"\n                    onChangeText={text => onChangephone(text)}\n                    value={phone}\n                />\n                <TextInput\n                    style={styles.formInputs}\n                    placeholder=\"Your email\"\n                    placeholderTextColor=\"#95a5a6\"\n                    onChangeText={text => onChangeemail(text)}\n                    value={email}\n                />\n                <TextInput\n                    style={styles.formInputs}\n                    placeholder=\"Your password\"\n                    placeholderTextColor=\"#95a5a6\"\n                    onChangeText={text => onChangePassword(text)}\n                    value={password}\n                    secureTextEntry={true}\n                />\n                <TouchableOpacity style={styles.formButton} onPress={register}>\n                    <View style={{ backgroundColor: \"black\", padding: \"4%\", borderRadius: 10 }}>\n                        <FontAwesome5 name=\"arrow-right\" size={20} color=\"white\" />\n                    </View>\n                    <View style={{ padding: \"4%\", }}>\n                        <Text style={{ fontFamily: \"Quicksand-Bold\", fontSize: Dimensions.get('window').height / 40 }}>  Sign up</Text>\n                    </View>\n                </TouchableOpacity>\n\n                <View style={styles.textButtonsContainer}>\n                    <Text style={styles.labels}>Already have an account?</Text>\n                    <TouchableOpacity onPress={() => navigation.navigate('Login')}>\n                        <Text style={styles.textButton}>Log in</Text>\n                    </TouchableOpacity>\n                </View>\n            </View>\n        </View>\n    );\n}\n\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        paddingHorizontal: '6%',\n        justifyContent: 'center',\n        marginTop: StatusBar.currentHeight\n    },\n    logo: {\n        height: Dimensions.get('window').height / 4,\n        width: Dimensions.get('window').width / 1.6,\n        alignSelf: 'flex-start',\n        marginBottom: '8%'\n    },\n    tagline: {\n        fontFamily: \"Quicksand-Bold\",\n        fontSize: Dimensions.get('window').width / 12,\n    },\n    form: {\n        paddingTop: \"6%\"\n    },\n    formInputs: {\n        height: Dimensions.get('window').height / 14,\n        borderRadius: 10,\n        backgroundColor: \"#ecf0f1\",\n        fontFamily: \"Quicksand-SemiBold\",\n        paddingHorizontal: \"5%\",\n        marginVertical: \"2%\",\n        fontSize: Dimensions.get('window').height / 42,\n        color: \"#34495e\"\n    },\n    formButton: {\n        flexDirection: 'row',\n        alignContent: \"center\",\n        alignItems: \"center\",\n        marginVertical: \"4%\"\n\n    },\n    checkbox: {\n        alignSelf: \"center\",\n        borderRadius: 10,\n\n    },\n    rememberMe: {\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        marginVertical: \"4%\",\n\n    },\n    rememberMeLabel: {\n        fontFamily: \"Quicksand-SemiBold\",\n        fontSize: Dimensions.get('window').height / 45,\n    },\n    labels: {\n        fontFamily: \"Quicksand-SemiBold\",\n        fontSize: Dimensions.get('window').height / 44,\n\n    },\n    textButtonsContainer: {\n        paddingRight: \"2%\",\n        justifyContent: \"flex-end\",\n        marginVertical: \"6%\",\n        paddingBottom: \"5%\"\n    },\n    textButton: {\n        color: Colors.primaryColor,\n        fontFamily: \"Quicksand-Bold\",\n        fontSize: Dimensions.get('window').height / 42,\n    }\n});"]},"metadata":{},"sourceType":"module"}